// This file is generated. Do not modify by hand.
// XML documentation file not found. To check if public methods have XML comments,
// make sure the XML doc file is present and located next to the scraped dll
namespace Unity.Services.Ccd.Management
{
    public class AssignBadgeOptions
    {
        public string BadgeName { get; set; }
        public System.Guid BucketId { get; set; }
        public System.Guid ReleaseId { get; set; }
        public System.Nullable<int> ReleaseNum { get; set; }
        public AssignBadgeOptions(System.Guid bucketId, string badgeName, System.Guid releaseId) {}
        public AssignBadgeOptions(System.Guid bucketId, string badgeName, int releaseNum) {}
    }

    public static class CcdManagement
    {
        public static Unity.Services.Ccd.Management.ICcdManagementServiceSdk Instance { get; }
        public static void SetBasePath(string basePath);
    }

    public static class CcdManagementErrorCodes
    {
        public const int AlreadyExists = 19006;
        public const int InactiveOrganization = 19010;
        public const int InternalError = 19008;
        public const int InvalidArgument = 19001;
        public const int InvalidHashMismatch = 19011;
        public const int OutOfRange = 19002;
        public const int Unauthorized = 19003;
    }

    public class CcdManagementException : Unity.Services.Core.RequestFailedException
    {
        public CcdManagementException(System.Exception innerException) {}
        public CcdManagementException(int reason, string message) {}
        public CcdManagementException(int reason, string message, System.Exception innerException) {}
    }

    public struct CcdManagementIdentifier : Unity.Services.Core.Editor.IEditorGameServiceIdentifier
    {
        public virtual string GetKey();
    }

    public class CcdManagementValidationException : Unity.Services.Ccd.Management.CcdManagementException
    {
        public System.Collections.Generic.List<object> Details;
        public CcdManagementValidationException(int reason, string message) {}
        public CcdManagementValidationException(int reason, string message, System.Collections.Generic.List<object> details) {}
        public CcdManagementValidationException(int reason, string message, System.Exception innerException) {}
    }

    public class ContentStatus
    {
        public string UploadHash { get; }
        public int UploadLength { get; }
        public int UploadOffset { get; }
        public ContentStatus(string uploadHash, int uploadLength, int uploadOffset) {}
    }

    public class CreateBucketOptions
    {
        public string Description { get; set; }
        public string Name { get; set; }
        public CreateBucketOptions(string name) {}
    }

    public class CreatePermissionsOption
    {
        public Unity.Services.Ccd.Management.Models.CcdPermissionCreate.ActionOptions Action { get; set; }
        public System.Guid BucketId { get; set; }
        public Unity.Services.Ccd.Management.Models.CcdPermissionCreate.PermissionOptions Permission { get; set; }
        public CreatePermissionsOption(System.Guid bucketId, Unity.Services.Ccd.Management.Models.CcdPermissionCreate.ActionOptions action, Unity.Services.Ccd.Management.Models.CcdPermissionCreate.PermissionOptions permission) {}
    }

    public class CreateReleaseOptions
    {
        public System.Guid BucketId { get; set; }
        public System.Collections.Generic.List<Unity.Services.Ccd.Management.Models.CcdReleaseEntryCreate> Entries { get; set; }
        public Unity.Services.Ccd.Management.Http.JsonObject Metadata { get; set; }
        public string Notes { get; set; }
        public System.DateTime Snapshot { get; set; }
        public CreateReleaseOptions(System.Guid bucketId) {}
    }

    public class DiffEntriesOptions
    {
        public System.Guid BucketId { get; set; }
        public System.Collections.Generic.List<string> IncludeStates { get; set; }
        public string Path { get; set; }
        public DiffEntriesOptions(System.Guid bucketId) {}
    }

    public class EntryByPathOptions
    {
        public System.Guid BucketId { get; set; }
        public string Path { get; set; }
        public System.Guid VersionId { get; set; }
        public EntryByPathOptions(System.Guid bucketId, string path) {}
    }

    public class EntryModelOptions
    {
        public string ContentHash { get; set; }
        public int ContentSize { get; set; }
        public string ContentType { get; set; }
        public System.Collections.Generic.List<string> Labels { get; set; }
        public Unity.Services.Ccd.Management.Http.JsonObject Metadata { get; set; }
        public string Path { get; set; }
        public bool UpdateIfExists { get; set; }
        public EntryModelOptions(string path, string contentHash, int contentSize) {}
    }

    public class EntryOptions
    {
        public System.Guid BucketId { get; set; }
        public System.Guid EntryId { get; set; }
        public string Label { get; set; }
        public string Path { get; set; }
        public System.Guid VersionId { get; set; }
        public EntryOptions(System.Guid bucketId, System.Guid entryId) {}
    }

    public class EntryVersionsOptions
    {
        public System.Guid BucketId { get; set; }
        public System.Guid EntryId { get; set; }
        public System.Guid VersionId { get; set; }
        public EntryVersionsOptions(System.Guid bucketId, System.Guid entryId, System.Guid versionId) {}
    }

    public enum HashingImplementation
    {
        public const Unity.Services.Ccd.Management.HashingImplementation SHA1CryptoServiceProvider = 1;
        public const Unity.Services.Ccd.Management.HashingImplementation Sha1Managed = 0;
        public int value__;
    }

    public interface ICcdManagementServiceSdk
    {
        public abstract System.Threading.Tasks.Task<Unity.Services.Ccd.Management.Models.CcdBadge> AssignBadgeAsync(Unity.Services.Ccd.Management.AssignBadgeOptions assignBadgeOptions);
        public abstract System.Threading.Tasks.Task<Unity.Services.Ccd.Management.Models.CcdBucket> CreateBucketAsync(Unity.Services.Ccd.Management.CreateBucketOptions createBucketOptions);
        public abstract System.Threading.Tasks.Task<string> CreateContentAsync(System.Guid bucketId, System.Guid entryId);
        public abstract System.Threading.Tasks.Task<Unity.Services.Ccd.Management.Models.CcdEntry> CreateEntryAsync(System.Guid bucketId, Unity.Services.Ccd.Management.EntryModelOptions entry);
        public abstract System.Threading.Tasks.Task<Unity.Services.Ccd.Management.Models.CcdEntry> CreateOrUpdateEntryByPathAsync(Unity.Services.Ccd.Management.EntryByPathOptions entryByPathOptions, Unity.Services.Ccd.Management.EntryModelOptions entry);
        public abstract System.Threading.Tasks.Task<Unity.Services.Ccd.Management.Models.CcdPermission> CreatePermissionAsync(Unity.Services.Ccd.Management.CreatePermissionsOption permissionsOptions);
        public abstract System.Threading.Tasks.Task<Unity.Services.Ccd.Management.Models.CcdRelease> CreateReleaseAsync(Unity.Services.Ccd.Management.CreateReleaseOptions createReleaseOptions);
        public abstract System.Threading.Tasks.Task DeleteBadgeAsync(System.Guid bucketId, string badgeName);
        public abstract System.Threading.Tasks.Task DeleteBucketAsync(System.Guid bucketId);
        public abstract System.Threading.Tasks.Task DeleteEntryAsync(System.Guid bucketId, System.Guid entryId);
        public abstract System.Threading.Tasks.Task DeletePermissionAsync(Unity.Services.Ccd.Management.UpdatePermissionsOption permissionsOptions);
        public abstract System.Threading.Tasks.Task<Unity.Services.Ccd.Management.Models.CcdBadge> GetBadgeAsync(System.Guid bucketId, string badgeName);
        public abstract System.Threading.Tasks.Task<Unity.Services.Ccd.Management.Models.CcdBucket> GetBucketAsync(System.Guid bucketId);
        public abstract System.Threading.Tasks.Task<System.IO.Stream> GetContentAsync(Unity.Services.Ccd.Management.EntryOptions entryOptions);
        public abstract System.Threading.Tasks.Task<Unity.Services.Ccd.Management.ContentStatus> GetContentStatusAsync(Unity.Services.Ccd.Management.EntryOptions entryOptions);
        public abstract System.Threading.Tasks.Task<Unity.Services.Ccd.Management.ContentStatus> GetContentStatusVersionAsync(Unity.Services.Ccd.Management.EntryVersionsOptions entryVersionsOption);
        public abstract System.Threading.Tasks.Task<System.IO.Stream> GetContentVersionAsync(Unity.Services.Ccd.Management.EntryVersionsOptions entryVersionsOption);
        public abstract System.Threading.Tasks.Task<Unity.Services.Ccd.Management.Models.CcdReleaseChangeVersion> GetDiffAsync(System.Guid bucketId);
        public abstract System.Threading.Tasks.Task<System.Collections.Generic.List<Unity.Services.Ccd.Management.Models.CcdReleaseEntry>> GetDiffEntriesAsync(Unity.Services.Ccd.Management.DiffEntriesOptions diffEntriesOptions, Unity.Services.Ccd.Management.PageOptions pageOptions = default(Unity.Services.Ccd.Management.PageOptions));
        public abstract System.Threading.Tasks.Task<System.Collections.Generic.List<Unity.Services.Ccd.Management.Models.CcdEntry>> GetEntriesAsync(Unity.Services.Ccd.Management.EntryOptions entryOptions, Unity.Services.Ccd.Management.PageOptions pageOptions = default(Unity.Services.Ccd.Management.PageOptions));
        public abstract System.Threading.Tasks.Task<Unity.Services.Ccd.Management.Models.CcdEntry> GetEntryAsync(System.Guid bucketId, System.Guid entryId);
        public abstract System.Threading.Tasks.Task<Unity.Services.Ccd.Management.Models.CcdEntry> GetEntryByPathAsync(Unity.Services.Ccd.Management.EntryByPathOptions entryByPathOptions);
        public abstract System.Threading.Tasks.Task<Unity.Services.Ccd.Management.Models.CcdEntry> GetEntryVersionAsync(Unity.Services.Ccd.Management.EntryVersionsOptions entryVersionsOption);
        public abstract System.Threading.Tasks.Task<System.Collections.Generic.List<Unity.Services.Ccd.Management.Models.CcdVersion>> GetEntryVersionsAsync(Unity.Services.Ccd.Management.EntryOptions entryOptions, Unity.Services.Ccd.Management.PageOptions pageOptions = default(Unity.Services.Ccd.Management.PageOptions));
        public abstract System.Threading.Tasks.Task<Unity.Services.Ccd.Management.Models.CcdOrg> GetOrgAsync();
        public abstract System.Threading.Tasks.Task<Unity.Services.Ccd.Management.Models.CcdOrgUsage> GetOrgUsageAsync();
        public abstract System.Threading.Tasks.Task<System.Collections.Generic.List<Unity.Services.Ccd.Management.Models.CcdPermission>> GetPermissionsAsync(System.Guid bucketId);
        public abstract System.Threading.Tasks.Task<Unity.Services.Ccd.Management.Models.CcdRelease> GetReleaseAsync(System.Guid bucketId, System.Guid releaseId);
        public abstract System.Threading.Tasks.Task<Unity.Services.Ccd.Management.Models.CcdRelease> GetReleaseByBadgeAsync(System.Guid bucketId, string badgeName);
        public abstract System.Threading.Tasks.Task<Unity.Services.Ccd.Management.Models.CcdReleaseChangeVersion> GetReleaseDiffAsync(Unity.Services.Ccd.Management.ReleaseDiffOptions releaseDiffOptions);
        public abstract System.Threading.Tasks.Task<System.Collections.Generic.List<Unity.Services.Ccd.Management.Models.CcdReleaseEntry>> GetReleaseDiffEntriesAsync(Unity.Services.Ccd.Management.ReleaseDiffOptions releaseDiffOptions, Unity.Services.Ccd.Management.PageOptions pageOptions = default(Unity.Services.Ccd.Management.PageOptions));
        public abstract System.Threading.Tasks.Task<System.Collections.Generic.List<Unity.Services.Ccd.Management.Models.CcdReleaseEntry>> GetReleaseEntriesAsync(Unity.Services.Ccd.Management.ReleaseEntryOptions releaseEntryOptions, Unity.Services.Ccd.Management.PageOptions pageOptions = default(Unity.Services.Ccd.Management.PageOptions));
        public abstract System.Threading.Tasks.Task<System.Collections.Generic.List<Unity.Services.Ccd.Management.Models.CcdReleaseEntry>> GetReleaseEntriesByBadgeAsync(Unity.Services.Ccd.Management.ReleaseByBadgeOptions releaseByBadgeOptions, Unity.Services.Ccd.Management.PageOptions pageOptions = default(Unity.Services.Ccd.Management.PageOptions));
        public abstract System.Threading.Tasks.Task<System.Collections.Generic.List<Unity.Services.Ccd.Management.Models.CcdRelease>> GetReleasesAsync(System.Guid bucketId, Unity.Services.Ccd.Management.PageOptions pageOptions = default(Unity.Services.Ccd.Management.PageOptions));
        public abstract System.Threading.Tasks.Task<Unity.Services.Ccd.Management.Models.CcdMetricQuantity> GetStatsAsync(Unity.Services.Ccd.Management.ReleaseStatsOptions releaseStatsOptions);
        public abstract System.Threading.Tasks.Task<Unity.Services.Ccd.Management.Models.CcdUserAPIKey> GetUserApiKeyAsync();
        public abstract System.Threading.Tasks.Task<Unity.Services.Ccd.Management.Models.CcdUser> GetUserInfoAsync();
        public abstract System.Threading.Tasks.Task<System.Collections.Generic.List<Unity.Services.Ccd.Management.Models.CcdBadge>> ListBadgesAsync(System.Guid bucketId, Unity.Services.Ccd.Management.PageOptions pageOptions = default(Unity.Services.Ccd.Management.PageOptions));
        public abstract System.Threading.Tasks.Task<System.Collections.Generic.List<Unity.Services.Ccd.Management.Models.CcdBucket>> ListBucketsAsync(Unity.Services.Ccd.Management.PageOptions pageOptions = default(Unity.Services.Ccd.Management.PageOptions));
        public abstract System.Threading.Tasks.Task<Unity.Services.Ccd.Management.Models.CcdRelease> PromoteBucketAsync(Unity.Services.Ccd.Management.PromoteBucketOptions promoteBucketOptions);
        public abstract System.Threading.Tasks.Task<Unity.Services.Ccd.Management.Models.CcdUserAPIKey> RegenerateUserApiKeyAsync();
        public abstract System.Threading.Tasks.Task<Unity.Services.Ccd.Management.Models.CcdBucket> UpdateBucketAsync(Unity.Services.Ccd.Management.UpdateBucketOptions updateBucketOptions);
        public abstract System.Threading.Tasks.Task<Unity.Services.Ccd.Management.Models.CcdEntry> UpdateEntryAsync(Unity.Services.Ccd.Management.EntryOptions entryOptions, Unity.Services.Ccd.Management.EntryModelOptions entry);
        public abstract System.Threading.Tasks.Task<Unity.Services.Ccd.Management.Models.CcdEntry> UpdateEntryByPathAsync(Unity.Services.Ccd.Management.EntryByPathOptions entryByPathOptions, Unity.Services.Ccd.Management.EntryModelOptions entry);
        public abstract System.Threading.Tasks.Task<Unity.Services.Ccd.Management.Models.CcdPermission> UpdatePermissionAsync(Unity.Services.Ccd.Management.UpdatePermissionsOption permissionsOptions);
        public abstract System.Threading.Tasks.Task<Unity.Services.Ccd.Management.Models.CcdRelease> UpdateReleaseAsync(System.Guid bucketId, System.Guid releaseId, string notes);
        public abstract System.Threading.Tasks.Task UploadContentAsync(Unity.Services.Ccd.Management.UploadContentOptions uploadContentOptions);
    }

    public interface ICcdManagementServiceSdkConfiguration
    {
        public abstract void SetBasePath(string basePath);
    }

    public class PageOptions
    {
        public int Page { get; set; }
        public int PerPage { get; set; }
        public PageOptions() {}
    }

    public delegate void ProgressDelegate(long bytesTransferred, long bytesTotal);

    public class PromoteBucketOptions
    {
        public System.Guid BucketId { get; set; }
        public System.Guid FromRelease { get; set; }
        public string Notes { get; set; }
        public PromoteBucketOptions(System.Guid bucketId, System.Guid fromRelease) {}
    }

    public class ReleaseByBadgeOptions
    {
        public string BadgeName { get; set; }
        public System.Guid BucketId { get; set; }
        public string Label { get; set; }
        public ReleaseByBadgeOptions(System.Guid bucketId, string badgeName) {}
    }

    public class ReleaseDiffOptions
    {
        public System.Guid BucketId { get; set; }
        public System.Guid FromReleaseId { get; set; }
        public System.Nullable<int> FromReleaseNum { get; set; }
        public System.Collections.Generic.List<string> Include_States { get; set; }
        public string Path { get; set; }
        public System.Guid ToReleaseId { get; set; }
        public System.Nullable<int> ToReleaseNum { get; set; }
        public ReleaseDiffOptions(System.Guid bucketId, System.Guid fromReleaseId, System.Guid toReleaseId) {}
        public ReleaseDiffOptions(System.Guid bucketId, int fromReleaseNum, int toReleaseNum) {}
    }

    public class ReleaseEntryOptions
    {
        public System.Guid BucketId { get; set; }
        public string Label { get; set; }
        public System.Guid ReleaseId { get; set; }
        public ReleaseEntryOptions(System.Guid bucketId, System.Guid releaseId) {}
    }

    public class ReleaseStatsOptions
    {
        public System.Guid BucketId { get; set; }
        public Unity.Services.Ccd.Management.ReleaseStatsOptions.CcdInterval Interval { get; set; }
        public Unity.Services.Ccd.Management.ReleaseStatsOptions.CcdMetric Metric { get; set; }
        public System.Guid ReleaseId { get; set; }
        public ReleaseStatsOptions(System.Guid bucketId, System.Guid releaseId, Unity.Services.Ccd.Management.ReleaseStatsOptions.CcdMetric metric, Unity.Services.Ccd.Management.ReleaseStatsOptions.CcdInterval interval) {}
        public enum CcdInterval
        {
            public const Unity.Services.Ccd.Management.ReleaseStatsOptions.CcdInterval Day = 1;
            public const Unity.Services.Ccd.Management.ReleaseStatsOptions.CcdInterval Month = 3;
            public int value__;
            public const Unity.Services.Ccd.Management.ReleaseStatsOptions.CcdInterval Week = 2;
        }
        public enum CcdMetric
        {
            public const Unity.Services.Ccd.Management.ReleaseStatsOptions.CcdMetric Downloads = 1;
            public const Unity.Services.Ccd.Management.ReleaseStatsOptions.CcdMetric Errors = 2;
            public int value__;
        }
    }

    public enum RequestMethod
    {
        public const Unity.Services.Ccd.Management.RequestMethod Delete = 5;
        public const Unity.Services.Ccd.Management.RequestMethod Get = 0;
        public const Unity.Services.Ccd.Management.RequestMethod Head = 2;
        public const Unity.Services.Ccd.Management.RequestMethod Options = 4;
        public const Unity.Services.Ccd.Management.RequestMethod Patch = 3;
        public const Unity.Services.Ccd.Management.RequestMethod Post = 1;
        public int value__;
    }

    public class TusClient
    {
        public System.Collections.Generic.Dictionary<string, string> AdditionalHeaders { get; }
        public static Unity.Services.Ccd.Management.HashingImplementation HashingImplementation { get; set; }
        public System.Net.IWebProxy Proxy { get; set; }
        public TusClient() {}
        [System.Diagnostics.DebuggerStepThrough] [System.Runtime.CompilerServices.AsyncStateMachine(typeof(Unity.Services.Ccd.Management.TusClient.<CreateAsync>d__12))] public System.Threading.Tasks.Task<string> CreateAsync(string url, long uploadLength, [System.Runtime.CompilerServices.TupleElementNames(Mono.Cecil.CustomAttributeArgument[])] params System.ValueTuple<string, string>[] metadata);
        [System.Diagnostics.DebuggerStepThrough] [System.Runtime.CompilerServices.AsyncStateMachine(typeof(Unity.Services.Ccd.Management.TusClient.<CreateAsync>d__11))] public System.Threading.Tasks.Task<string> CreateAsync(string url, System.IO.FileInfo fileInfo, [System.Runtime.CompilerServices.TupleElementNames(Mono.Cecil.CustomAttributeArgument[])] params System.ValueTuple<string, string>[] metadata);
        [System.Diagnostics.DebuggerStepThrough] [System.Runtime.CompilerServices.AsyncStateMachine(typeof(Unity.Services.Ccd.Management.TusClient.<Delete>d__18))] public System.Threading.Tasks.Task<bool> Delete(string url);
        public Unity.Services.Ccd.Management.TusOperation<Unity.Services.Ccd.Management.TusHttpResponse> DownloadAsync(string url, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        [System.Diagnostics.DebuggerStepThrough] [System.Runtime.CompilerServices.AsyncStateMachine(typeof(Unity.Services.Ccd.Management.TusClient.<GetServerInfo>d__17))] public System.Threading.Tasks.Task<Unity.Services.Ccd.Management.TusServerInfo> GetServerInfo(string url);
        [System.Diagnostics.DebuggerStepThrough] [System.Runtime.CompilerServices.AsyncStateMachine(typeof(Unity.Services.Ccd.Management.TusClient.<HeadAsync>d__16))] public System.Threading.Tasks.Task<Unity.Services.Ccd.Management.TusHttpResponse> HeadAsync(string url);
        public Unity.Services.Ccd.Management.TusOperation<System.Collections.Generic.List<Unity.Services.Ccd.Management.TusHttpResponse>> UploadAsync(string url, System.IO.FileInfo file, double chunkSize = 5, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        public Unity.Services.Ccd.Management.TusOperation<System.Collections.Generic.List<Unity.Services.Ccd.Management.TusHttpResponse>> UploadAsync(string url, System.IO.Stream fileStream, double chunkSize = 5, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    }

    public class TusException : System.Net.WebException
    {
        public System.Net.WebException OriginalException { get; }
        public string ResponseContent { get; }
        public System.Net.HttpStatusCode StatusCode { get; }
        public string StatusDescription { get; }
        public TusException(System.OperationCanceledException ex) {}
        public TusException(System.Net.WebException ex, string message = ) {}
        public TusException(Unity.Services.Ccd.Management.TusException ex, string message) {}
        public virtual string ToString();
    }

    public static class TusHeaderNames
    {
        public const string ContentLength = content-length;
        public const string ContentType = content-type;
        public const string TusChecksumAlgorithm = tus-checksum-algorithm;
        public const string TusExtension = tus-extension;
        public const string TusMaxSize = tus-max-size;
        public const string TusResumable = tus-resumable;
        public const string TusVersion = tus-version;
        public const string UploadChecksum = upload-checksum;
        public const string UploadHash = upload-hash;
        public const string UploadLength = upload-length;
        public const string UploadMetadata = upload-metadata;
        public const string UploadOffset = upload-offset;
    }

    public class TusHttpClient
    {
        public System.Net.IWebProxy Proxy { get; set; }
        public TusHttpClient() {}
        [System.Diagnostics.DebuggerStepThrough] [System.Runtime.CompilerServices.AsyncStateMachine(typeof(Unity.Services.Ccd.Management.TusHttpClient.<PerformRequestAsync>d__4))] public System.Threading.Tasks.Task<Unity.Services.Ccd.Management.TusHttpResponse> PerformRequestAsync(Unity.Services.Ccd.Management.TusHttpRequest request);
    }

    public class TusHttpRequest
    {
        public event Unity.Services.Ccd.Management.ProgressDelegate DownloadProgressed;
        public event Unity.Services.Ccd.Management.ProgressDelegate UploadProgressed;
        public System.ArraySegment<byte> BodyBytes { get; }
        public System.Threading.CancellationToken CancelToken { get; }
        public System.Collections.Generic.IReadOnlyDictionary<string, string> Headers { get; }
        public string Method { get; }
        public System.Uri Url { get; }
        public TusHttpRequest(string url, Unity.Services.Ccd.Management.RequestMethod method, System.Collections.Generic.IDictionary<string, string> additionalHeaders = default(System.Collections.Generic.IDictionary<string, string>), System.ArraySegment<byte> bodyBytes = default(System.ArraySegment<byte>), System.Nullable<System.Threading.CancellationToken> cancelToken = default(System.Nullable<System.Threading.CancellationToken>)) {}
        public void AddHeader(string key, string value);
        public void OnDownloadProgressed(long bytesTransferred, long bytesTotal);
        public void OnUploadProgressed(long bytesTransferred, long bytesTotal);
    }

    public class TusHttpResponse
    {
        public System.Collections.Generic.IReadOnlyDictionary<string, string> Headers { get; }
        public byte[] ResponseBytes { get; }
        public string ResponseString { get; }
        public System.Net.HttpStatusCode StatusCode { get; }
        public TusHttpResponse(System.Net.HttpStatusCode statusCode, System.Collections.Generic.IDictionary<string, string> headers = default(System.Collections.Generic.IDictionary<string, string>), byte[] responseBytes = default(byte[])) {}
    }

    public class TusOperation<T>
    {
        public event Unity.Services.Ccd.Management.ProgressDelegate Progressed;
        public System.Threading.Tasks.Task<T> Operation { get; }
        public System.Runtime.CompilerServices.TaskAwaiter<T> GetAwaiter();
        public delegate System.Threading.Tasks.Task<T> OperationDelegate<T>(Unity.Services.Ccd.Management.ProgressDelegate reportProgress);
    }

    public class TusServerInfo
    {
        public string[] Extensions { get; }
        public long MaxSize { get; }
        public string[] SupportedChecksumAlgorithms { get; }
        public string[] SupportedVersions { get; }
        public bool SupportsDelete { get; }
        public string Version { get; }
        public TusServerInfo(string version, string supportedVersions, string extensions, System.Nullable<long> maxSize, string checksumAlgorithms) {}
    }

    public class UpdateBucketOptions
    {
        public System.Guid BucketId { get; set; }
        public string Description { get; set; }
        public string Name { get; set; }
        public UpdateBucketOptions(System.Guid bucketId, string name) {}
    }

    public class UpdatePermissionsOption
    {
        public Unity.Services.Ccd.Management.Models.CcdPermissionUpdate.ActionOptions Action { get; set; }
        public System.Guid BucketId { get; set; }
        public Unity.Services.Ccd.Management.Models.CcdPermissionUpdate.PermissionOptions Permission { get; set; }
        public UpdatePermissionsOption(System.Guid bucketId, Unity.Services.Ccd.Management.Models.CcdPermissionUpdate.ActionOptions action, Unity.Services.Ccd.Management.Models.CcdPermissionUpdate.PermissionOptions permission) {}
    }

    public class UploadContentOptions
    {
        public System.Guid BucketId { get; set; }
        public double ChunkSize { get; set; }
        public System.Guid EntryId { get; set; }
        public System.IO.Stream File { get; set; }
        public Unity.Services.Ccd.Management.ProgressDelegate OnProgressed { get; set; }
        public UploadContentOptions(System.Guid bucketId, System.Guid entryId, System.IO.Stream file) {}
    }
}

namespace Unity.Services.Ccd.Management.Http
{
    public class DeserializationException : System.Exception
    {
        public DeserializationException() {}
        public DeserializationException(string message) {}
    }

    public class DeserializationSettings
    {
        public Unity.Services.Ccd.Management.Http.MissingMemberHandling MissingMemberHandling;
        public DeserializationSettings() {}
    }

    [UnityEngine.Scripting.Preserve] public class JsonObject
    {
        public T GetAs<T>(Unity.Services.Ccd.Management.Http.DeserializationSettings deserializationSettings = default(Unity.Services.Ccd.Management.Http.DeserializationSettings));
        public string GetAsString();
    }

    [UnityEngine.Scripting.Preserve] public class JsonObjectConverter : Newtonsoft.Json.JsonConverter
    {
        public JsonObjectConverter() {}
        public virtual bool CanConvert(System.Type objectType);
        public virtual object ReadJson(Newtonsoft.Json.JsonReader reader, System.Type objectType, object existingValue, Newtonsoft.Json.JsonSerializer serializer);
        public virtual void WriteJson(Newtonsoft.Json.JsonWriter writer, object value, Newtonsoft.Json.JsonSerializer serializer);
    }

    public enum MissingMemberHandling
    {
        public const Unity.Services.Ccd.Management.Http.MissingMemberHandling Error = 0;
        public const Unity.Services.Ccd.Management.Http.MissingMemberHandling Ignore = 1;
        public int value__;
    }
}

namespace Unity.Services.Ccd.Management.Models
{
    [System.Runtime.Serialization.DataContract(Name = @"AuthenticationError")] [UnityEngine.Scripting.Preserve] public class AuthenticationError
    {
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"detail")] [UnityEngine.Scripting.Preserve] public string Detail { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"status")] [UnityEngine.Scripting.Preserve] public int Status { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"title")] [UnityEngine.Scripting.Preserve] public string Title { get; }
        [UnityEngine.Scripting.Preserve] public AuthenticationError(string title = default(string), int status = 0, string detail = default(string)) {}
    }

    [System.Runtime.Serialization.DataContract(Name = @"AuthorizationError")] [UnityEngine.Scripting.Preserve] public class AuthorizationError
    {
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"detail")] [UnityEngine.Scripting.Preserve] public string Detail { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"status")] [UnityEngine.Scripting.Preserve] public int Status { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"title")] [UnityEngine.Scripting.Preserve] public string Title { get; }
        [UnityEngine.Scripting.Preserve] public AuthorizationError(string title = default(string), int status = 0, string detail = default(string)) {}
    }

    [System.Runtime.Serialization.DataContract(Name = @"ccd.badge")] [UnityEngine.Scripting.Preserve] public class CcdBadge
    {
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"created")] [UnityEngine.Scripting.Preserve] public System.DateTime Created { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"created_by")] [UnityEngine.Scripting.Preserve] public string CreatedBy { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"created_by_name")] [UnityEngine.Scripting.Preserve] public string CreatedByName { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"name")] [UnityEngine.Scripting.Preserve] public string Name { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"releaseid")] [UnityEngine.Scripting.Preserve] public System.Guid Releaseid { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"releasenum")] [UnityEngine.Scripting.Preserve] public int Releasenum { get; }
        [UnityEngine.Scripting.Preserve] public CcdBadge(System.DateTime created = default(System.DateTime), string createdBy = default(string), string createdByName = default(string), string name = default(string), System.Guid releaseid = default(System.Guid), int releasenum = 0) {}
    }

    [System.Runtime.Serialization.DataContract(Name = @"ccd.badgeAssign")] [UnityEngine.Scripting.Preserve] public class CcdBadgeAssign
    {
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = true, IsRequired = true, Name = @"name")] [UnityEngine.Scripting.Preserve] public string Name { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"releaseid")] [UnityEngine.Scripting.Preserve] public string Releaseid { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"releasenum")] [UnityEngine.Scripting.Preserve] public string Releasenum { get; }
        [UnityEngine.Scripting.Preserve] public CcdBadgeAssign(string name, string releaseid = default(string), string releasenum = default(string)) {}
    }

    [System.Runtime.Serialization.DataContract(Name = @"ccd.bucket")] [UnityEngine.Scripting.Preserve] public class CcdBucket
    {
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"attributes")] [UnityEngine.Scripting.Preserve] public Unity.Services.Ccd.Management.Models.CcdBucketAttributes Attributes { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"changes")] [UnityEngine.Scripting.Preserve] public Unity.Services.Ccd.Management.Models.CcdReleaseChangeVersion Changes { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"created")] [UnityEngine.Scripting.Preserve] public System.DateTime Created { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"description")] [UnityEngine.Scripting.Preserve] public string Description { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"id")] [UnityEngine.Scripting.Preserve] public System.Guid Id { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"last_release")] [UnityEngine.Scripting.Preserve] public Unity.Services.Ccd.Management.Models.CcdRelease LastRelease { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"name")] [UnityEngine.Scripting.Preserve] public string Name { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"permissions")] [UnityEngine.Scripting.Preserve] public Unity.Services.Ccd.Management.Models.CcdBucketPermissions Permissions { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = true, Name = @"private")] [UnityEngine.Scripting.Preserve] public bool Private { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"projectguid")] [UnityEngine.Scripting.Preserve] public System.Guid Projectguid { get; }
        [UnityEngine.Scripting.Preserve] public CcdBucket(Unity.Services.Ccd.Management.Models.CcdBucketAttributes attributes = default(Unity.Services.Ccd.Management.Models.CcdBucketAttributes), Unity.Services.Ccd.Management.Models.CcdReleaseChangeVersion changes = default(Unity.Services.Ccd.Management.Models.CcdReleaseChangeVersion), System.DateTime created = default(System.DateTime), string description = default(string), System.Guid id = default(System.Guid), Unity.Services.Ccd.Management.Models.CcdRelease lastRelease = default(Unity.Services.Ccd.Management.Models.CcdRelease), string name = default(string), Unity.Services.Ccd.Management.Models.CcdBucketPermissions permissions = default(Unity.Services.Ccd.Management.Models.CcdBucketPermissions), bool private = False, System.Guid projectguid = default(System.Guid)) {}
    }

    [System.Runtime.Serialization.DataContract(Name = @"ccd.bucketAccessToken")] [UnityEngine.Scripting.Preserve] public class CcdBucketAccessToken
    {
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"created")] [UnityEngine.Scripting.Preserve] public System.DateTime Created { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"description")] [UnityEngine.Scripting.Preserve] public string Description { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"id")] [UnityEngine.Scripting.Preserve] public System.Guid Id { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"token")] [UnityEngine.Scripting.Preserve] public string Token { get; }
        [UnityEngine.Scripting.Preserve] public CcdBucketAccessToken(System.DateTime created = default(System.DateTime), string description = default(string), System.Guid id = default(System.Guid), string token = default(string)) {}
    }

    [System.Runtime.Serialization.DataContract(Name = @"ccd.bucketAccessTokenCreate")] [UnityEngine.Scripting.Preserve] public class CcdBucketAccessTokenCreate
    {
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"description")] [UnityEngine.Scripting.Preserve] public string Description { get; }
        [UnityEngine.Scripting.Preserve] public CcdBucketAccessTokenCreate(string description = default(string)) {}
    }

    [System.Runtime.Serialization.DataContract(Name = @"ccd.bucketAccessTokenUpdate")] [UnityEngine.Scripting.Preserve] public class CcdBucketAccessTokenUpdate
    {
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"description")] [UnityEngine.Scripting.Preserve] public string Description { get; }
        [UnityEngine.Scripting.Preserve] public CcdBucketAccessTokenUpdate(string description = default(string)) {}
    }

    [System.Runtime.Serialization.DataContract(Name = @"ccd.bucketAttributes")] [UnityEngine.Scripting.Preserve] public class CcdBucketAttributes
    {
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = true, Name = @"promote_only")] [UnityEngine.Scripting.Preserve] public bool PromoteOnly { get; }
        [UnityEngine.Scripting.Preserve] public CcdBucketAttributes(bool promoteOnly = False) {}
    }

    [System.Runtime.Serialization.DataContract(Name = @"ccd.bucketCreate")] [UnityEngine.Scripting.Preserve] public class CcdBucketCreate
    {
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"description")] [UnityEngine.Scripting.Preserve] public string Description { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = true, IsRequired = true, Name = @"name")] [UnityEngine.Scripting.Preserve] public string Name { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = true, Name = @"private")] [UnityEngine.Scripting.Preserve] public bool Private { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = true, IsRequired = true, Name = @"projectguid")] [UnityEngine.Scripting.Preserve] public System.Guid Projectguid { get; }
        [UnityEngine.Scripting.Preserve] public CcdBucketCreate(string name, System.Guid projectguid, string description = default(string), bool private = False) {}
    }

    [System.Runtime.Serialization.DataContract(Name = @"ccd.bucketPermissions")] [UnityEngine.Scripting.Preserve] public class CcdBucketPermissions
    {
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = true, Name = @"bucket_promote")] [UnityEngine.Scripting.Preserve] public bool BucketPromote { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = true, Name = @"bucket_read")] [UnityEngine.Scripting.Preserve] public bool BucketRead { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = true, Name = @"bucket_release")] [UnityEngine.Scripting.Preserve] public bool BucketRelease { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = true, Name = @"bucket_write")] [UnityEngine.Scripting.Preserve] public bool BucketWrite { get; }
        [UnityEngine.Scripting.Preserve] public CcdBucketPermissions(bool bucketPromote = False, bool bucketRead = False, bool bucketRelease = False, bool bucketWrite = False) {}
    }

    [System.Runtime.Serialization.DataContract(Name = @"ccd.bucketUpdate")] [UnityEngine.Scripting.Preserve] public class CcdBucketUpdate
    {
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"description")] [UnityEngine.Scripting.Preserve] public string Description { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"name")] [UnityEngine.Scripting.Preserve] public string Name { get; }
        [UnityEngine.Scripting.Preserve] public CcdBucketUpdate(string description = default(string), string name = default(string)) {}
    }

    [System.Runtime.Serialization.DataContract(Name = @"ccd.entry")] [UnityEngine.Scripting.Preserve] public class CcdEntry
    {
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = true, Name = @"complete")] [UnityEngine.Scripting.Preserve] public bool Complete { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"content_hash")] [UnityEngine.Scripting.Preserve] public string ContentHash { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"content_link")] [UnityEngine.Scripting.Preserve] public string ContentLink { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"content_size")] [UnityEngine.Scripting.Preserve] public int ContentSize { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"content_type")] [UnityEngine.Scripting.Preserve] public string ContentType { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"current_versionid")] [UnityEngine.Scripting.Preserve] public System.Guid CurrentVersionid { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"entryid")] [UnityEngine.Scripting.Preserve] public System.Guid Entryid { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"labels")] [UnityEngine.Scripting.Preserve] public System.Collections.Generic.List<string> Labels { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"last_modified")] [UnityEngine.Scripting.Preserve] public System.DateTime LastModified { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"last_modified_by")] [UnityEngine.Scripting.Preserve] public string LastModifiedBy { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"last_modified_by_name")] [UnityEngine.Scripting.Preserve] public string LastModifiedByName { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"link")] [UnityEngine.Scripting.Preserve] public string Link { get; }
        [Newtonsoft.Json.JsonConverter(typeof(Unity.Services.Ccd.Management.Http.JsonObjectConverter))] [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"metadata")] [UnityEngine.Scripting.Preserve] public Unity.Services.Ccd.Management.Http.JsonObject Metadata { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"path")] [UnityEngine.Scripting.Preserve] public string Path { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"updated_at")] [UnityEngine.Scripting.Preserve] public System.DateTime UpdatedAt { get; }
        [UnityEngine.Scripting.Preserve] public CcdEntry(bool complete = False, string contentHash = default(string), string contentLink = default(string), int contentSize = 0, string contentType = default(string), System.Guid currentVersionid = default(System.Guid), System.Guid entryid = default(System.Guid), System.Collections.Generic.List<string> labels = default(System.Collections.Generic.List<string>), System.DateTime lastModified = default(System.DateTime), string lastModifiedBy = default(string), string lastModifiedByName = default(string), string link = default(string), object metadata = default(object), string path = default(string), System.DateTime updatedAt = default(System.DateTime)) {}
    }

    [System.Runtime.Serialization.DataContract(Name = @"ccd.entryCreate")] [UnityEngine.Scripting.Preserve] public class CcdEntryCreate
    {
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = true, IsRequired = true, Name = @"content_hash")] [UnityEngine.Scripting.Preserve] public string ContentHash { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = true, IsRequired = true, Name = @"content_size")] [UnityEngine.Scripting.Preserve] public int ContentSize { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"content_type")] [UnityEngine.Scripting.Preserve] public string ContentType { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"labels")] [UnityEngine.Scripting.Preserve] public System.Collections.Generic.List<string> Labels { get; }
        [Newtonsoft.Json.JsonConverter(typeof(Unity.Services.Ccd.Management.Http.JsonObjectConverter))] [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"metadata")] [UnityEngine.Scripting.Preserve] public Unity.Services.Ccd.Management.Http.JsonObject Metadata { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = true, IsRequired = true, Name = @"path")] [UnityEngine.Scripting.Preserve] public string Path { get; }
        [UnityEngine.Scripting.Preserve] public CcdEntryCreate(string contentHash, int contentSize, string path, string contentType = default(string), System.Collections.Generic.List<string> labels = default(System.Collections.Generic.List<string>), object metadata = default(object)) {}
    }

    [System.Runtime.Serialization.DataContract(Name = @"ccd.entryCreateByPath")] [UnityEngine.Scripting.Preserve] public class CcdEntryCreateByPath
    {
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = true, IsRequired = true, Name = @"content_hash")] [UnityEngine.Scripting.Preserve] public string ContentHash { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = true, IsRequired = true, Name = @"content_size")] [UnityEngine.Scripting.Preserve] public int ContentSize { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"content_type")] [UnityEngine.Scripting.Preserve] public string ContentType { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"labels")] [UnityEngine.Scripting.Preserve] public System.Collections.Generic.List<string> Labels { get; }
        [Newtonsoft.Json.JsonConverter(typeof(Unity.Services.Ccd.Management.Http.JsonObjectConverter))] [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"metadata")] [UnityEngine.Scripting.Preserve] public Unity.Services.Ccd.Management.Http.JsonObject Metadata { get; }
        [UnityEngine.Scripting.Preserve] public CcdEntryCreateByPath(string contentHash, int contentSize, string contentType = default(string), System.Collections.Generic.List<string> labels = default(System.Collections.Generic.List<string>), object metadata = default(object)) {}
    }

    [System.Runtime.Serialization.DataContract(Name = @"ccd.entryUpdate")] [UnityEngine.Scripting.Preserve] public class CcdEntryUpdate
    {
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"content_hash")] [UnityEngine.Scripting.Preserve] public string ContentHash { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"content_size")] [UnityEngine.Scripting.Preserve] public int ContentSize { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"content_type")] [UnityEngine.Scripting.Preserve] public string ContentType { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"labels")] [UnityEngine.Scripting.Preserve] public System.Collections.Generic.List<string> Labels { get; }
        [Newtonsoft.Json.JsonConverter(typeof(Unity.Services.Ccd.Management.Http.JsonObjectConverter))] [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"metadata")] [UnityEngine.Scripting.Preserve] public Unity.Services.Ccd.Management.Http.JsonObject Metadata { get; }
        [UnityEngine.Scripting.Preserve] public CcdEntryUpdate(string contentHash = default(string), int contentSize = 0, string contentType = default(string), System.Collections.Generic.List<string> labels = default(System.Collections.Generic.List<string>), object metadata = default(object)) {}
    }

    [UnityEngine.Scripting.Preserve] public enum CcdErrorCodes
    {
        public const Unity.Services.Ccd.Management.Models.CcdErrorCodes _0 = 0;
        public const Unity.Services.Ccd.Management.Models.CcdErrorCodes _1 = 1;
        public const Unity.Services.Ccd.Management.Models.CcdErrorCodes _10 = 10;
        public const Unity.Services.Ccd.Management.Models.CcdErrorCodes _11 = 11;
        public const Unity.Services.Ccd.Management.Models.CcdErrorCodes _12 = 12;
        public const Unity.Services.Ccd.Management.Models.CcdErrorCodes _2 = 2;
        public const Unity.Services.Ccd.Management.Models.CcdErrorCodes _3 = 3;
        public const Unity.Services.Ccd.Management.Models.CcdErrorCodes _4 = 4;
        public const Unity.Services.Ccd.Management.Models.CcdErrorCodes _5 = 5;
        public const Unity.Services.Ccd.Management.Models.CcdErrorCodes _6 = 6;
        public const Unity.Services.Ccd.Management.Models.CcdErrorCodes _7 = 7;
        public const Unity.Services.Ccd.Management.Models.CcdErrorCodes _8 = 8;
        public const Unity.Services.Ccd.Management.Models.CcdErrorCodes _9 = 9;
        public int value__;
    }

    [System.Runtime.Serialization.DataContract(Name = @"ccd.httpError")] [UnityEngine.Scripting.Preserve] public class CcdHttpError
    {
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"code")] [UnityEngine.Scripting.Preserve] public Unity.Services.Ccd.Management.Models.CcdErrorCodes Code { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"details")] [UnityEngine.Scripting.Preserve] public System.Collections.Generic.List<string> Details { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"reason")] [UnityEngine.Scripting.Preserve] public string Reason { get; }
        [UnityEngine.Scripting.Preserve] public CcdHttpError(Unity.Services.Ccd.Management.Models.CcdErrorCodes code = 0, System.Collections.Generic.List<string> details = default(System.Collections.Generic.List<string>), string reason = default(string)) {}
    }

    [System.Runtime.Serialization.DataContract(Name = @"ccd.metricQuantity")] [UnityEngine.Scripting.Preserve] public class CcdMetricQuantity
    {
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"quantity")] [UnityEngine.Scripting.Preserve] public int Quantity { get; }
        [UnityEngine.Scripting.Preserve] public CcdMetricQuantity(int quantity = 0) {}
    }

    [System.Runtime.Serialization.DataContract(Name = @"ccd.org")] [UnityEngine.Scripting.Preserve] public class CcdOrg
    {
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"id")] [UnityEngine.Scripting.Preserve] public string Id { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"name")] [UnityEngine.Scripting.Preserve] public string Name { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"orgid")] [UnityEngine.Scripting.Preserve] public string Orgid { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = true, Name = @"tos_accepted")] [UnityEngine.Scripting.Preserve] public bool TosAccepted { get; }
        [UnityEngine.Scripting.Preserve] public CcdOrg(string id = default(string), string name = default(string), string orgid = default(string), bool tosAccepted = False) {}
    }

    [System.Runtime.Serialization.DataContract(Name = @"ccd.orgTosUpdate")] [UnityEngine.Scripting.Preserve] public class CcdOrgTosUpdate
    {
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"tos_version")] [UnityEngine.Scripting.Preserve] public int TosVersion { get; }
        [UnityEngine.Scripting.Preserve] public CcdOrgTosUpdate(int tosVersion = 0) {}
    }

    [System.Runtime.Serialization.DataContract(Name = @"ccd.orgUsage")] [UnityEngine.Scripting.Preserve] public class CcdOrgUsage
    {
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"id")] [UnityEngine.Scripting.Preserve] public string Id { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"start_time")] [UnityEngine.Scripting.Preserve] public System.DateTime StartTime { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"usage")] [UnityEngine.Scripting.Preserve] public System.Collections.Generic.List<Unity.Services.Ccd.Management.Models.CcdUsage> Usage { get; }
        [UnityEngine.Scripting.Preserve] public CcdOrgUsage(string id = default(string), System.DateTime startTime = default(System.DateTime), System.Collections.Generic.List<Unity.Services.Ccd.Management.Models.CcdUsage> usage = default(System.Collections.Generic.List<Unity.Services.Ccd.Management.Models.CcdUsage>)) {}
    }

    [System.Runtime.Serialization.DataContract(Name = @"ccd.permission")] [UnityEngine.Scripting.Preserve] public class CcdPermission
    {
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"action")] [UnityEngine.Scripting.Preserve] public string Action { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"permission")] [UnityEngine.Scripting.Preserve] public string Permission { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"resource")] [UnityEngine.Scripting.Preserve] public string Resource { get; }
        [UnityEngine.Scripting.Preserve] public CcdPermission(string action = default(string), string permission = default(string), string resource = default(string)) {}
    }

    [System.Runtime.Serialization.DataContract(Name = @"ccd.permissionCreate")] [UnityEngine.Scripting.Preserve] public class CcdPermissionCreate
    {
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))] [System.Runtime.Serialization.DataMember(EmitDefaultValue = true, IsRequired = true, Name = @"action")] [UnityEngine.Scripting.Preserve] public Unity.Services.Ccd.Management.Models.CcdPermissionCreate.ActionOptions Action { get; }
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))] [System.Runtime.Serialization.DataMember(EmitDefaultValue = true, IsRequired = true, Name = @"permission")] [UnityEngine.Scripting.Preserve] public Unity.Services.Ccd.Management.Models.CcdPermissionCreate.PermissionOptions Permission { get; }
        [UnityEngine.Scripting.Preserve] public CcdPermissionCreate(Unity.Services.Ccd.Management.Models.CcdPermissionCreate.ActionOptions action, Unity.Services.Ccd.Management.Models.CcdPermissionCreate.PermissionOptions permission) {}
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))] [UnityEngine.Scripting.Preserve] public enum ActionOptions
        {
            public int value__;
            [System.Runtime.Serialization.EnumMember(Value = @"write")] public const Unity.Services.Ccd.Management.Models.CcdPermissionCreate.ActionOptions Write = 1;
        }
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))] [UnityEngine.Scripting.Preserve] public enum PermissionOptions
        {
            [System.Runtime.Serialization.EnumMember(Value = @"allow")] public const Unity.Services.Ccd.Management.Models.CcdPermissionCreate.PermissionOptions Allow = 1;
            [System.Runtime.Serialization.EnumMember(Value = @"deny")] public const Unity.Services.Ccd.Management.Models.CcdPermissionCreate.PermissionOptions Deny = 2;
            public int value__;
        }
    }

    [System.Runtime.Serialization.DataContract(Name = @"ccd.permissionUpdate")] [UnityEngine.Scripting.Preserve] public class CcdPermissionUpdate
    {
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))] [System.Runtime.Serialization.DataMember(EmitDefaultValue = true, IsRequired = true, Name = @"action")] [UnityEngine.Scripting.Preserve] public Unity.Services.Ccd.Management.Models.CcdPermissionUpdate.ActionOptions Action { get; }
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))] [System.Runtime.Serialization.DataMember(EmitDefaultValue = true, IsRequired = true, Name = @"permission")] [UnityEngine.Scripting.Preserve] public Unity.Services.Ccd.Management.Models.CcdPermissionUpdate.PermissionOptions Permission { get; }
        [UnityEngine.Scripting.Preserve] public CcdPermissionUpdate(Unity.Services.Ccd.Management.Models.CcdPermissionUpdate.ActionOptions action, Unity.Services.Ccd.Management.Models.CcdPermissionUpdate.PermissionOptions permission) {}
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))] [UnityEngine.Scripting.Preserve] public enum ActionOptions
        {
            public int value__;
            [System.Runtime.Serialization.EnumMember(Value = @"write")] public const Unity.Services.Ccd.Management.Models.CcdPermissionUpdate.ActionOptions Write = 1;
        }
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))] [UnityEngine.Scripting.Preserve] public enum PermissionOptions
        {
            [System.Runtime.Serialization.EnumMember(Value = @"allow")] public const Unity.Services.Ccd.Management.Models.CcdPermissionUpdate.PermissionOptions Allow = 1;
            [System.Runtime.Serialization.EnumMember(Value = @"deny")] public const Unity.Services.Ccd.Management.Models.CcdPermissionUpdate.PermissionOptions Deny = 2;
            public int value__;
        }
    }

    [System.Runtime.Serialization.DataContract(Name = @"ccd.promoteBucket")] [UnityEngine.Scripting.Preserve] public class CcdPromoteBucket
    {
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = true, IsRequired = true, Name = @"from_release")] [UnityEngine.Scripting.Preserve] public System.Guid FromRelease { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"notes")] [UnityEngine.Scripting.Preserve] public string Notes { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = true, IsRequired = true, Name = @"to_bucket")] [UnityEngine.Scripting.Preserve] public System.Guid ToBucket { get; }
        [UnityEngine.Scripting.Preserve] public CcdPromoteBucket(System.Guid fromRelease, System.Guid toBucket, string notes = default(string)) {}
    }

    [System.Runtime.Serialization.DataContract(Name = @"ccd.promoteBucketResponse")] [UnityEngine.Scripting.Preserve] public class CcdPromoteBucketResponse
    {
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"promotion_id")] [UnityEngine.Scripting.Preserve] public System.Guid PromotionId { get; }
        [UnityEngine.Scripting.Preserve] public CcdPromoteBucketResponse(System.Guid promotionId = default(System.Guid)) {}
    }

    [System.Runtime.Serialization.DataContract(Name = @"ccd.promotion")] [UnityEngine.Scripting.Preserve] public class CcdPromotion
    {
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"error")] [UnityEngine.Scripting.Preserve] public string Error { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"from_bucket_id")] [UnityEngine.Scripting.Preserve] public System.Guid FromBucketId { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"from_bucket_name")] [UnityEngine.Scripting.Preserve] public string FromBucketName { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"from_release_id")] [UnityEngine.Scripting.Preserve] public System.Guid FromReleaseId { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"from_release_number")] [UnityEngine.Scripting.Preserve] public int FromReleaseNumber { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"promotion_id")] [UnityEngine.Scripting.Preserve] public System.Guid PromotionId { get; }
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))] [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"promotion_status")] [UnityEngine.Scripting.Preserve] public Unity.Services.Ccd.Management.Models.CcdPromotion.PromotionStatusOptions PromotionStatus { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"to_bucket_id")] [UnityEngine.Scripting.Preserve] public System.Guid ToBucketId { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"to_bucket_name")] [UnityEngine.Scripting.Preserve] public string ToBucketName { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"to_release_id")] [UnityEngine.Scripting.Preserve] public System.Guid ToReleaseId { get; }
        [UnityEngine.Scripting.Preserve] public CcdPromotion(string error = default(string), System.Guid fromBucketId = default(System.Guid), string fromBucketName = default(string), System.Guid fromReleaseId = default(System.Guid), int fromReleaseNumber = 0, System.Guid promotionId = default(System.Guid), Unity.Services.Ccd.Management.Models.CcdPromotion.PromotionStatusOptions promotionStatus = 0, System.Guid toBucketId = default(System.Guid), string toBucketName = default(string), System.Guid toReleaseId = default(System.Guid)) {}
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))] [UnityEngine.Scripting.Preserve] public enum PromotionStatusOptions
        {
            [System.Runtime.Serialization.EnumMember(Value = @"Complete")] public const Unity.Services.Ccd.Management.Models.CcdPromotion.PromotionStatusOptions Complete = 2;
            [System.Runtime.Serialization.EnumMember(Value = @"Failed")] public const Unity.Services.Ccd.Management.Models.CcdPromotion.PromotionStatusOptions Failed = 4;
            [System.Runtime.Serialization.EnumMember(Value = @"InProgress")] public const Unity.Services.Ccd.Management.Models.CcdPromotion.PromotionStatusOptions InProgress = 3;
            [System.Runtime.Serialization.EnumMember(Value = @"NotFound")] public const Unity.Services.Ccd.Management.Models.CcdPromotion.PromotionStatusOptions NotFound = 1;
            public int value__;
        }
    }

    [System.Runtime.Serialization.DataContract(Name = @"ccd.release")] [UnityEngine.Scripting.Preserve] public class CcdRelease
    {
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"badges")] [UnityEngine.Scripting.Preserve] public System.Collections.Generic.List<Unity.Services.Ccd.Management.Models.CcdBadge> Badges { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"changes")] [UnityEngine.Scripting.Preserve] public Unity.Services.Ccd.Management.Models.CcdReleaseChangeVersion Changes { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"content_hash")] [UnityEngine.Scripting.Preserve] public string ContentHash { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"content_size")] [UnityEngine.Scripting.Preserve] public int ContentSize { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"created")] [UnityEngine.Scripting.Preserve] public System.DateTime Created { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"created_by")] [UnityEngine.Scripting.Preserve] public string CreatedBy { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"created_by_name")] [UnityEngine.Scripting.Preserve] public string CreatedByName { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"entries_link")] [UnityEngine.Scripting.Preserve] public string EntriesLink { get; }
        [Newtonsoft.Json.JsonConverter(typeof(Unity.Services.Ccd.Management.Http.JsonObjectConverter))] [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"metadata")] [UnityEngine.Scripting.Preserve] public Unity.Services.Ccd.Management.Http.JsonObject Metadata { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"notes")] [UnityEngine.Scripting.Preserve] public string Notes { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"promoted_from_bucket")] [UnityEngine.Scripting.Preserve] public System.Guid PromotedFromBucket { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"promoted_from_release")] [UnityEngine.Scripting.Preserve] public System.Guid PromotedFromRelease { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"releaseid")] [UnityEngine.Scripting.Preserve] public System.Guid Releaseid { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"releasenum")] [UnityEngine.Scripting.Preserve] public int Releasenum { get; }
        [UnityEngine.Scripting.Preserve] public CcdRelease(System.Collections.Generic.List<Unity.Services.Ccd.Management.Models.CcdBadge> badges = default(System.Collections.Generic.List<Unity.Services.Ccd.Management.Models.CcdBadge>), Unity.Services.Ccd.Management.Models.CcdReleaseChangeVersion changes = default(Unity.Services.Ccd.Management.Models.CcdReleaseChangeVersion), string contentHash = default(string), int contentSize = 0, System.DateTime created = default(System.DateTime), string createdBy = default(string), string createdByName = default(string), string entriesLink = default(string), object metadata = default(object), string notes = default(string), System.Guid promotedFromBucket = default(System.Guid), System.Guid promotedFromRelease = default(System.Guid), System.Guid releaseid = default(System.Guid), int releasenum = 0) {}
    }

    [System.Runtime.Serialization.DataContract(Name = @"ccd.releaseChangeVersion")] [UnityEngine.Scripting.Preserve] public class CcdReleaseChangeVersion
    {
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"add")] [UnityEngine.Scripting.Preserve] public int Add { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"delete")] [UnityEngine.Scripting.Preserve] public int Delete { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"last_modified")] [UnityEngine.Scripting.Preserve] public System.DateTime LastModified { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"last_modified_by")] [UnityEngine.Scripting.Preserve] public string LastModifiedBy { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"last_modified_by_name")] [UnityEngine.Scripting.Preserve] public string LastModifiedByName { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = true, Name = @"loading")] [UnityEngine.Scripting.Preserve] public bool Loading { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"unchanged")] [UnityEngine.Scripting.Preserve] public int Unchanged { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"update")] [UnityEngine.Scripting.Preserve] public int Update { get; }
        [UnityEngine.Scripting.Preserve] public CcdReleaseChangeVersion(int add = 0, int delete = 0, System.DateTime lastModified = default(System.DateTime), string lastModifiedBy = default(string), string lastModifiedByName = default(string), bool loading = False, int unchanged = 0, int update = 0) {}
    }

    [System.Runtime.Serialization.DataContract(Name = @"ccd.releaseCreate")] [UnityEngine.Scripting.Preserve] public class CcdReleaseCreate
    {
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"entries")] [UnityEngine.Scripting.Preserve] public System.Collections.Generic.List<Unity.Services.Ccd.Management.Models.CcdReleaseEntryCreate> Entries { get; }
        [Newtonsoft.Json.JsonConverter(typeof(Unity.Services.Ccd.Management.Http.JsonObjectConverter))] [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"metadata")] [UnityEngine.Scripting.Preserve] public Unity.Services.Ccd.Management.Http.JsonObject Metadata { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"notes")] [UnityEngine.Scripting.Preserve] public string Notes { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"snapshot")] [UnityEngine.Scripting.Preserve] public System.DateTime Snapshot { get; }
        [UnityEngine.Scripting.Preserve] public CcdReleaseCreate(System.Collections.Generic.List<Unity.Services.Ccd.Management.Models.CcdReleaseEntryCreate> entries = default(System.Collections.Generic.List<Unity.Services.Ccd.Management.Models.CcdReleaseEntryCreate>), object metadata = default(object), string notes = default(string), System.DateTime snapshot = default(System.DateTime)) {}
    }

    [System.Runtime.Serialization.DataContract(Name = @"ccd.releaseEntry")] [UnityEngine.Scripting.Preserve] public class CcdReleaseEntry
    {
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))] [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"change_state")] [UnityEngine.Scripting.Preserve] public Unity.Services.Ccd.Management.Models.CcdReleaseEntry.ChangeStateOptions ChangeState { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = true, Name = @"complete")] [UnityEngine.Scripting.Preserve] public bool Complete { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"content_hash")] [UnityEngine.Scripting.Preserve] public string ContentHash { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"content_link")] [UnityEngine.Scripting.Preserve] public string ContentLink { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"content_size")] [UnityEngine.Scripting.Preserve] public int ContentSize { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"content_type")] [UnityEngine.Scripting.Preserve] public string ContentType { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"entryid")] [UnityEngine.Scripting.Preserve] public System.Guid Entryid { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"labels")] [UnityEngine.Scripting.Preserve] public System.Collections.Generic.List<string> Labels { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"last_modified")] [UnityEngine.Scripting.Preserve] public System.DateTime LastModified { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"last_modified_by")] [UnityEngine.Scripting.Preserve] public string LastModifiedBy { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"last_modified_by_name")] [UnityEngine.Scripting.Preserve] public string LastModifiedByName { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"link")] [UnityEngine.Scripting.Preserve] public string Link { get; }
        [Newtonsoft.Json.JsonConverter(typeof(Unity.Services.Ccd.Management.Http.JsonObjectConverter))] [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"metadata")] [UnityEngine.Scripting.Preserve] public Unity.Services.Ccd.Management.Http.JsonObject Metadata { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"path")] [UnityEngine.Scripting.Preserve] public string Path { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"updated_at")] [UnityEngine.Scripting.Preserve] public System.DateTime UpdatedAt { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"versionid")] [UnityEngine.Scripting.Preserve] public System.Guid Versionid { get; }
        [UnityEngine.Scripting.Preserve] public CcdReleaseEntry(Unity.Services.Ccd.Management.Models.CcdReleaseEntry.ChangeStateOptions changeState = 0, bool complete = False, string contentHash = default(string), string contentLink = default(string), int contentSize = 0, string contentType = default(string), System.Guid entryid = default(System.Guid), System.Collections.Generic.List<string> labels = default(System.Collections.Generic.List<string>), System.DateTime lastModified = default(System.DateTime), string lastModifiedBy = default(string), string lastModifiedByName = default(string), string link = default(string), object metadata = default(object), string path = default(string), System.DateTime updatedAt = default(System.DateTime), System.Guid versionid = default(System.Guid)) {}
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))] [UnityEngine.Scripting.Preserve] public enum ChangeStateOptions
        {
            [System.Runtime.Serialization.EnumMember(Value = @"Add")] public const Unity.Services.Ccd.Management.Models.CcdReleaseEntry.ChangeStateOptions Add = 2;
            [System.Runtime.Serialization.EnumMember(Value = @"Delete")] public const Unity.Services.Ccd.Management.Models.CcdReleaseEntry.ChangeStateOptions Delete = 3;
            [System.Runtime.Serialization.EnumMember(Value = @"Unchanged")] public const Unity.Services.Ccd.Management.Models.CcdReleaseEntry.ChangeStateOptions Unchanged = 1;
            [System.Runtime.Serialization.EnumMember(Value = @"Update")] public const Unity.Services.Ccd.Management.Models.CcdReleaseEntry.ChangeStateOptions Update = 4;
            public int value__;
        }
    }

    [System.Runtime.Serialization.DataContract(Name = @"ccd.releaseEntryCreate")] [UnityEngine.Scripting.Preserve] public class CcdReleaseEntryCreate
    {
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = true, IsRequired = true, Name = @"entryid")] [UnityEngine.Scripting.Preserve] public System.Guid Entryid { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = true, IsRequired = true, Name = @"versionid")] [UnityEngine.Scripting.Preserve] public System.Guid Versionid { get; }
        [UnityEngine.Scripting.Preserve] public CcdReleaseEntryCreate(System.Guid entryid, System.Guid versionid) {}
    }

    [System.Runtime.Serialization.DataContract(Name = @"ccd.releaseUpdate")] [UnityEngine.Scripting.Preserve] public class CcdReleaseUpdate
    {
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"notes")] [UnityEngine.Scripting.Preserve] public string Notes { get; }
        [UnityEngine.Scripting.Preserve] public CcdReleaseUpdate(string notes = default(string)) {}
    }

    [System.Runtime.Serialization.DataContract(Name = @"ccd.usage")] [UnityEngine.Scripting.Preserve] public class CcdUsage
    {
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"projectguid")] [UnityEngine.Scripting.Preserve] public System.Guid Projectguid { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"quantity")] [UnityEngine.Scripting.Preserve] public System.Decimal Quantity { get; }
        [UnityEngine.Scripting.Preserve] public CcdUsage(System.Guid projectguid = default(System.Guid), [System.Runtime.CompilerServices.DecimalConstant(0, 0, 0, 0, 0)] System.Decimal quantity) {}
    }

    [System.Runtime.Serialization.DataContract(Name = @"ccd.user")] [UnityEngine.Scripting.Preserve] public class CcdUser
    {
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"id")] [UnityEngine.Scripting.Preserve] public string Id { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"name")] [UnityEngine.Scripting.Preserve] public string Name { get; }
        [UnityEngine.Scripting.Preserve] public CcdUser(string id = default(string), string name = default(string)) {}
    }

    [System.Runtime.Serialization.DataContract(Name = @"ccd.userAPIKey")] [UnityEngine.Scripting.Preserve] public class CcdUserAPIKey
    {
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = true, IsRequired = true, Name = @"apikey")] [UnityEngine.Scripting.Preserve] public string Apikey { get; }
        [UnityEngine.Scripting.Preserve] public CcdUserAPIKey(string apikey) {}
    }

    [System.Runtime.Serialization.DataContract(Name = @"ccd.version")] [UnityEngine.Scripting.Preserve] public class CcdVersion
    {
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"content_hash")] [UnityEngine.Scripting.Preserve] public string ContentHash { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"content_link")] [UnityEngine.Scripting.Preserve] public string ContentLink { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"content_size")] [UnityEngine.Scripting.Preserve] public int ContentSize { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"content_type")] [UnityEngine.Scripting.Preserve] public string ContentType { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"labels")] [UnityEngine.Scripting.Preserve] public System.Collections.Generic.List<string> Labels { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"last_modified")] [UnityEngine.Scripting.Preserve] public System.DateTime LastModified { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"link")] [UnityEngine.Scripting.Preserve] public string Link { get; }
        [Newtonsoft.Json.JsonConverter(typeof(Unity.Services.Ccd.Management.Http.JsonObjectConverter))] [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"metadata")] [UnityEngine.Scripting.Preserve] public Unity.Services.Ccd.Management.Http.JsonObject Metadata { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"path")] [UnityEngine.Scripting.Preserve] public string Path { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"versionid")] [UnityEngine.Scripting.Preserve] public System.Guid Versionid { get; }
        [UnityEngine.Scripting.Preserve] public CcdVersion(string contentHash = default(string), string contentLink = default(string), int contentSize = 0, string contentType = default(string), System.Collections.Generic.List<string> labels = default(System.Collections.Generic.List<string>), System.DateTime lastModified = default(System.DateTime), string link = default(string), object metadata = default(object), string path = default(string), System.Guid versionid = default(System.Guid)) {}
    }

    [System.Runtime.Serialization.DataContract(Name = @"ConflictError")] [UnityEngine.Scripting.Preserve] public class ConflictError
    {
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"detail")] [UnityEngine.Scripting.Preserve] public string Detail { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"status")] [UnityEngine.Scripting.Preserve] public int Status { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"title")] [UnityEngine.Scripting.Preserve] public string Title { get; }
        [UnityEngine.Scripting.Preserve] public ConflictError(string title = default(string), int status = 0, string detail = default(string)) {}
    }

    [System.Runtime.Serialization.DataContract(Name = @"GatewayTimeoutError")] [UnityEngine.Scripting.Preserve] public class GatewayTimeoutError
    {
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"status")] [UnityEngine.Scripting.Preserve] public int Status { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"title")] [UnityEngine.Scripting.Preserve] public string Title { get; }
        [UnityEngine.Scripting.Preserve] public GatewayTimeoutError(string title = default(string), int status = 0) {}
    }

    [System.Runtime.Serialization.DataContract(Name = @"inline_object")] [UnityEngine.Scripting.Preserve] public class InlineObject
    {
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = true, IsRequired = true, Name = @"file")] [UnityEngine.Scripting.Preserve] public System.IO.Stream File { get; }
        [UnityEngine.Scripting.Preserve] public InlineObject(System.IO.Stream file) {}
    }

    [System.Runtime.Serialization.DataContract(Name = @"InternalServerError")] [UnityEngine.Scripting.Preserve] public class InternalServerError
    {
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"status")] [UnityEngine.Scripting.Preserve] public int Status { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"title")] [UnityEngine.Scripting.Preserve] public string Title { get; }
        [UnityEngine.Scripting.Preserve] public InternalServerError(string title = default(string), int status = 0) {}
    }

    public interface IOneOf
    {
        public abstract System.Type Type { get; }
        public abstract object Value { get; }
    }

    [System.Runtime.Serialization.DataContract(Name = @"MethodNotAllowedError")] [UnityEngine.Scripting.Preserve] public class MethodNotAllowedError
    {
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"detail")] [UnityEngine.Scripting.Preserve] public string Detail { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"status")] [UnityEngine.Scripting.Preserve] public int Status { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"title")] [UnityEngine.Scripting.Preserve] public string Title { get; }
        [UnityEngine.Scripting.Preserve] public MethodNotAllowedError(string title = default(string), int status = 0, string detail = default(string)) {}
    }

    [System.Runtime.Serialization.DataContract(Name = @"NotFoundError")] [UnityEngine.Scripting.Preserve] public class NotFoundError
    {
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"detail")] [UnityEngine.Scripting.Preserve] public string Detail { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"requestId")] [UnityEngine.Scripting.Preserve] public string RequestId { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"status")] [UnityEngine.Scripting.Preserve] public int Status { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"title")] [UnityEngine.Scripting.Preserve] public string Title { get; }
        [UnityEngine.Scripting.Preserve] public NotFoundError(string title = default(string), int status = 0, string detail = default(string), string requestId = default(string)) {}
    }

    [System.Runtime.Serialization.DataContract(Name = @"PayloadTooLargeError")] [UnityEngine.Scripting.Preserve] public class PayloadTooLargeError
    {
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"detail")] [UnityEngine.Scripting.Preserve] public string Detail { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"status")] [UnityEngine.Scripting.Preserve] public int Status { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"title")] [UnityEngine.Scripting.Preserve] public string Title { get; }
        [UnityEngine.Scripting.Preserve] public PayloadTooLargeError(string title = default(string), int status = 0, string detail = default(string)) {}
    }

    [System.Runtime.Serialization.DataContract(Name = @"QuotaExceededError")] [UnityEngine.Scripting.Preserve] public class QuotaExceededError
    {
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"detail")] [UnityEngine.Scripting.Preserve] public string Detail { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"status")] [UnityEngine.Scripting.Preserve] public int Status { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"title")] [UnityEngine.Scripting.Preserve] public string Title { get; }
        [UnityEngine.Scripting.Preserve] public QuotaExceededError(string title = default(string), int status = 0, string detail = default(string)) {}
    }

    [System.Runtime.Serialization.DataContract(Name = @"RatelimitExceededError")] [UnityEngine.Scripting.Preserve] public class RatelimitExceededError
    {
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"detail")] [UnityEngine.Scripting.Preserve] public string Detail { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"status")] [UnityEngine.Scripting.Preserve] public int Status { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"title")] [UnityEngine.Scripting.Preserve] public string Title { get; }
        [UnityEngine.Scripting.Preserve] public RatelimitExceededError(string title = default(string), int status = 0, string detail = default(string)) {}
    }

    [System.Runtime.Serialization.DataContract(Name = @"ServiceUnavailableError")] [UnityEngine.Scripting.Preserve] public class ServiceUnavailableError
    {
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"status")] [UnityEngine.Scripting.Preserve] public int Status { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"title")] [UnityEngine.Scripting.Preserve] public string Title { get; }
        [UnityEngine.Scripting.Preserve] public ServiceUnavailableError(string title = default(string), int status = 0) {}
    }

    [System.Runtime.Serialization.DataContract(Name = @"TooManyRequestsError")] [UnityEngine.Scripting.Preserve] public class TooManyRequestsError
    {
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"detail")] [UnityEngine.Scripting.Preserve] public string Detail { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"status")] [UnityEngine.Scripting.Preserve] public int Status { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"title")] [UnityEngine.Scripting.Preserve] public string Title { get; }
        [UnityEngine.Scripting.Preserve] public TooManyRequestsError(string title = default(string), int status = 0, string detail = default(string)) {}
    }

    [System.Runtime.Serialization.DataContract(Name = @"ValidationError")] [UnityEngine.Scripting.Preserve] public class ValidationError
    {
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"detail")] [UnityEngine.Scripting.Preserve] public string Detail { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"details")] [UnityEngine.Scripting.Preserve] public System.Collections.Generic.List<object> Details { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"status")] [UnityEngine.Scripting.Preserve] public int Status { get; }
        [System.Runtime.Serialization.DataMember(EmitDefaultValue = false, Name = @"title")] [UnityEngine.Scripting.Preserve] public string Title { get; }
        [UnityEngine.Scripting.Preserve] public ValidationError(string title = default(string), int status = 0, string detail = default(string), System.Collections.Generic.List<object> details = default(System.Collections.Generic.List<object>)) {}
    }
}
